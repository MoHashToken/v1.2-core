{
  "details": "Extension of {AccessControl} that allows enumerating the members of each role.",
  "kind": "dev",
  "methods":
  {
    "getRoleAdmin(bytes32)":
    {
      "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
    },
    "getRoleMember(bytes32,uint256)":
    {
      "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
    },
    "getRoleMemberCount(bytes32)":
    {
      "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
    },
    "grantRole(bytes32,address)":
    {
      "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
    },
    "hasRole(bytes32,address)":
    {
      "details": "Returns `true` if `account` has been granted `role`."
    },
    "renounceRole(bytes32,address)":
    {
      "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
    },
    "revokeRole(bytes32,address)":
    {
      "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
    },
    "supportsInterface(bytes4)":
    {
      "details": "See {IERC165-supportsInterface}."
    }
  },
  "version": 1
}
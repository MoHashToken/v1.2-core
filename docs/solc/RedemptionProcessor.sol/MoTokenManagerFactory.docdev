{
  "kind": "dev",
  "methods":
  {
    "addTokenManager(address,address,address,uint64,address)":
    {
      "params":
      {
        "_initNAV": "Initial NAV value",
        "_rWADetails": "Address of RWADetails contract",
        "_stableCoin": "Stable coin contract address",
        "_token": "Address of MoToken contract",
        "_tokenManager": "Address of MoTokenManager contract"
      }
    },
    "linkJrTokenToSrToken(bytes32,bytes32)":
    {
      "params":
      {
        "_jrToken": "Symbol of MoJuniorToken",
        "_srToken": "Symbol of Senior MoToken"
      }
    },
    "owner()":
    {
      "details": "Returns the address of the current owner."
    },
    "renounceOwnership()":
    {
      "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
    },
    "transferOwnership(address)":
    {
      "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
    }
  },
  "stateVariables":
  {
    "linkedSrTokenOf":
    {
      "details": "Mapping points to the senior token symbol for a junior token symbol"
    },
    "symbolToTokenManager":
    {
      "details": "Mapping points to the token manager of a given token's symbol"
    },
    "symbols":
    {
      "details": "Holds all the mo token symbols"
    },
    "tokenId":
    {
      "details": "Index used while creating MoTokenManager"
    }
  },
  "version": 1
}